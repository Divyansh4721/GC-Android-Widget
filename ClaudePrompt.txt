Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\AndroidManifest.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.rateswidget">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="GC Jewellers Rates"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <receiver
            android:name=".RatesWidgetProvider"
            android:exported="true">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
                <action android:name="com.example.rateswidget.ACTION_REFRESH" />
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/rates_widget_info" />
        </receiver>

        <service
            android:name=".WidgetUpdateService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

    </application>
</manifest>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\java\com\example\rateswidget\BootCompletedReceiver.java
Content:
package com.example.rateswidget;

import android.appwidget.AppWidgetManager;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;

public class BootCompletedReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) {
            // Start the widget update service
            WidgetUpdateService.scheduleNextUpdate(context);
            
            // Manually trigger an update to all widgets
            AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
            ComponentName thisWidget = new ComponentName(context, RatesWidgetProvider.class);
            int[] appWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);
            
            Intent updateIntent = new Intent(context, RatesWidgetProvider.class);
            updateIntent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
            updateIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetIds);
            context.sendBroadcast(updateIntent);
        }
    }
}

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\java\com\example\rateswidget\MainActivity.java
Content:
package com.example.rateswidget;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.provider.Settings;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        TextView devMessage = findViewById(R.id.developer_message);
        devMessage.setText("Hello Developer");
        
        // Request battery optimization exemption
        Button batteryOptButton = findViewById(R.id.battery_opt_button);
        batteryOptButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                requestBatteryOptimizationExemption();
            }
        });
    }
    
    private void requestBatteryOptimizationExemption() {
        Intent intent = new Intent();
        intent.setAction(Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS);
        intent.setData(Uri.parse("package:" + getPackageName()));
        startActivity(intent);
        Toast.makeText(this, "Please enable battery optimization exemption for reliable widget updates", 
                Toast.LENGTH_LONG).show();
    }
}

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\java\com\example\rateswidget\RatesFetchTask.java
Content:
package com.example.rateswidget;

import android.appwidget.AppWidgetManager;
import android.content.Context;
import android.graphics.Color;
import android.os.AsyncTask;
import android.widget.RemoteViews;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class RatesFetchTask extends AsyncTask<Void, Void, String[]> {
    private static final String API_URL = "https://bcast.jmdpatil.com:7768/VOTSBroadcastStreaming/Services/xml/GetLiveRateByTemplateID/jmd";
    private static final int GOLD_ROW = 4;
    private static final int SILVER_ROW = 3;
    private static final int RATE_COLUMN = 6;
    
    private final Context context;
    private final RemoteViews views;
    private final AppWidgetManager appWidgetManager;
    private final int appWidgetId;

    public RatesFetchTask(Context context, RemoteViews views, AppWidgetManager appWidgetManager, int appWidgetId) {
        this.context = context;
        this.views = views;
        this.appWidgetManager = appWidgetManager;
        this.appWidgetId = appWidgetId;
    }

    @Override
    protected void onPreExecute() {
        // Update the last updated time
        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss", Locale.getDefault());
        String currentTime = dateFormat.format(new Date());
        views.setTextViewText(R.id.last_updated, "Last Updated: " + currentTime);
        
        // Show loading indicator
        views.setTextViewText(R.id.gold_rate, "Loading...");
        views.setTextViewText(R.id.silver_rate, "Loading...");
        
        appWidgetManager.updateAppWidget(appWidgetId, views);
    }

    @Override
    protected String[] doInBackground(Void... voids) {
        String[] rates = new String[2]; // [gold, silver]
        
        try {
            URL url = new URL(API_URL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            
            int responseCode = connection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                String line;
                int currentRow = 0;
                
                while ((line = reader.readLine()) != null) {
                    currentRow++;
                    if (currentRow == GOLD_ROW || currentRow == SILVER_ROW) {
                        String[] columns = line.split("\t");
                        if (columns.length > RATE_COLUMN) {
                            if (currentRow == GOLD_ROW) {
                                rates[0] = columns[RATE_COLUMN].trim();
                            } else {
                                rates[1] = columns[RATE_COLUMN].trim();
                            }
                        }
                    }
                }
                reader.close();
            }
            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return rates;
    }

    @Override
    protected void onPostExecute(String[] rates) {
        // Format and display the rates
        String goldRate = rates[0] != null ? rates[0] : "N/A";
        String silverRate = rates[1] != null ? rates[1] : "N/A";
        
        views.setTextViewText(R.id.gold_rate, "Gold: ₹" + goldRate);
        views.setTextViewText(R.id.silver_rate, "Silver: ₹" + silverRate);
        
        // Set the colors
        views.setTextColor(R.id.gold_rate, Color.rgb(255, 215, 0)); // Gold color
        views.setTextColor(R.id.silver_rate, Color.rgb(192, 192, 192)); // Silver color
        
        // Update the widget
        appWidgetManager.updateAppWidget(appWidgetId, views);
    }
}

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\java\com\example\rateswidget\RatesWidgetProvider.java
Content:
package com.example.rateswidget;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.PowerManager;
import android.widget.RemoteViews;
import android.graphics.Color;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class RatesWidgetProvider extends AppWidgetProvider {
    private static final String ACTION_REFRESH = "com.example.rateswidget.ACTION_REFRESH";
    private static final int REFRESH_INTERVAL_SECONDS = 10;
    private static ScheduledExecutorService scheduler;

    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        for (int appWidgetId : appWidgetIds) {
            updateAppWidget(context, appWidgetManager, appWidgetId);
        }
        
        // Start the continuous refresh service
        startContinuousRefresh(context);
    }

    @Override
    public void onReceive(Context context, Intent intent) {
        super.onReceive(context, intent);
        
        if (ACTION_REFRESH.equals(intent.getAction())) {
            AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
            ComponentName thisWidget = new ComponentName(context, RatesWidgetProvider.class);
            int[] appWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);
            
            for (int appWidgetId : appWidgetIds) {
                updateAppWidget(context, appWidgetManager, appWidgetId);
            }
        }
    }

    private void updateAppWidget(Context context, AppWidgetManager appWidgetManager, int appWidgetId) {
        RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.rates_widget);
        
        // Set up refresh button click intent
        Intent refreshIntent = new Intent(context, RatesWidgetProvider.class);
        refreshIntent.setAction(ACTION_REFRESH);
        PendingIntent refreshPendingIntent = PendingIntent.getBroadcast(
                context, 0, refreshIntent, PendingIntent.FLAG_IMMUTABLE);
        views.setOnClickPendingIntent(R.id.refresh_button, refreshPendingIntent);
        
        // Start API fetch
        new RatesFetchTask(context, views, appWidgetManager, appWidgetId).execute();
    }

    private void startContinuousRefresh(Context context) {
        if (scheduler != null && !scheduler.isShutdown()) {
            return;
        }
        
        // Acquire wake lock to keep the service running
        PowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
        PowerManager.WakeLock wakeLock = powerManager.newWakeLock(
                PowerManager.PARTIAL_WAKE_LOCK, "RatesWidget:WakeLock");
        wakeLock.acquire(10 * 60 * 1000); // 10 minutes max
        
        // Schedule periodic refresh
        scheduler = Executors.newSingleThreadScheduledExecutor();
        scheduler.scheduleAtFixedRate(() -> {
            Intent refreshIntent = new Intent(context, RatesWidgetProvider.class);
            refreshIntent.setAction(ACTION_REFRESH);
            context.sendBroadcast(refreshIntent);
            
            if (wakeLock.isHeld()) {
                wakeLock.release();
            }
        }, 0, REFRESH_INTERVAL_SECONDS, TimeUnit.SECONDS);
        
        // Set up alarm as backup for refresh
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        Intent alarmIntent = new Intent(context, RatesWidgetProvider.class);
        alarmIntent.setAction(ACTION_REFRESH);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(
                context, 0, alarmIntent, PendingIntent.FLAG_IMMUTABLE);
        
        alarmManager.setRepeating(
                AlarmManager.RTC_WAKEUP,
                System.currentTimeMillis(),
                REFRESH_INTERVAL_SECONDS * 1000L,
                pendingIntent
        );
    }

    @Override
    public void onDisabled(Context context) {
        super.onDisabled(context);
        
        // Clean up resources when last widget is removed
        if (scheduler != null && !scheduler.isShutdown()) {
            scheduler.shutdownNow();
        }
        
        // Cancel alarm
        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
        Intent intent = new Intent(context, RatesWidgetProvider.class);
        intent.setAction(ACTION_REFRESH);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(
                context, 0, intent, PendingIntent.FLAG_IMMUTABLE);
        alarmManager.cancel(pendingIntent);
    }
}

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\java\com\example\rateswidget\WidgetUpdateService.java
Content:
package com.example.rateswidget;

import android.app.job.JobParameters;
import android.app.job.JobService;
import android.appwidget.AppWidgetManager;
import android.content.ComponentName;
import android.content.Intent;

public class WidgetUpdateService extends JobService {

    @Override
    public boolean onStartJob(JobParameters params) {
        // Update all widgets
        AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(this);
        ComponentName thisWidget = new ComponentName(this, RatesWidgetProvider.class);
        int[] appWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);
        
        Intent updateIntent = new Intent(this, RatesWidgetProvider.class);
        updateIntent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
        updateIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetIds);
        sendBroadcast(updateIntent);
        
        // Reschedule the job for continuous updates
        scheduleNextUpdate(this);
        
        return false; // Job is done, no more work needed in background
    }

    @Override
    public boolean onStopJob(JobParameters params) {
        // Reschedule if job is killed
        return true;
    }
    
    public static void scheduleNextUpdate(android.content.Context context) {
        android.app.job.JobScheduler jobScheduler = 
                (android.app.job.JobScheduler) context.getSystemService(android.content.Context.JOB_SCHEDULER_SERVICE);
        
        android.app.job.JobInfo.Builder builder = new android.app.job.JobInfo.Builder(
                1,
                new ComponentName(context, WidgetUpdateService.class))
                .setMinimumLatency(10 * 1000) // 10 seconds
                .setOverrideDeadline(15 * 1000) // Maximum delay of 15 seconds
                .setRequiredNetworkType(android.app.job.JobInfo.NETWORK_TYPE_ANY)
                .setPersisted(true);
        
        jobScheduler.schedule(builder.build());
    }
}

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\drawable\ic_launcher_background.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path
        android:fillColor="#3DDC84"
        android:pathData="M0,0h108v108h-108z" />
    <path
        android:fillColor="#00000000"
        android:pathData="M9,0L9,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,0L19,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,0L29,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,0L39,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,0L49,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,0L59,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,0L69,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,0L79,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M89,0L89,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M99,0L99,108"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,9L108,9"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,19L108,19"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,29L108,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,39L108,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,49L108,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,59L108,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,69L108,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,79L108,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,89L108,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M0,99L108,99"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,29L89,29"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,39L89,39"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,49L89,49"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,59L89,59"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,69L89,69"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M19,79L89,79"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M29,19L29,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M39,19L39,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M49,19L49,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M59,19L59,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M69,19L69,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
    <path
        android:fillColor="#00000000"
        android:pathData="M79,19L79,89"
        android:strokeWidth="0.8"
        android:strokeColor="#33FFFFFF" />
</vector>


Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\drawable\ic_launcher_foreground.xml
Content:
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="108"
    android:viewportHeight="108">
    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
        <aapt:attr name="android:fillColor">
            <gradient
                android:endX="85.84757"
                android:endY="92.4963"
                android:startX="42.9492"
                android:startY="49.59793"
                android:type="linear">
                <item
                    android:color="#44000000"
                    android:offset="0.0" />
                <item
                    android:color="#00000000"
                    android:offset="1.0" />
            </gradient>
        </aapt:attr>
    </path>
    <path
        android:fillColor="#FFFFFF"
        android:fillType="nonZero"
        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
        android:strokeWidth="1"
        android:strokeColor="#00000000" />
</vector>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\drawable\ic_refresh.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="24dp"
    android:height="24dp"
    android:viewportWidth="24.0"
    android:viewportHeight="24.0">
    <path
        android:fillColor="#FFFFFF"
        android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z"/>
</vector>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\drawable\widget_background.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#333333" />
    <corners android:radius="8dp" />
    <stroke
        android:width="1dp"
        android:color="#FFD700" />
</shape>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\drawable\widget_preview.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android">
    <solid android:color="#333333" />
    <corners android:radius="8dp" />
    <stroke
        android:width="2dp"
        android:color="#FFD700" />
</shape>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\layout\activity_main.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@android:color/black"
    android:padding="16dp">

    <TextView
        android:id="@+id/developer_message"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Hello Developer"
        android:textColor="@android:color/white"
        android:textSize="24sp" />

    <Button
        android:id="@+id/battery_opt_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/developer_message"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="24dp"
        android:text="Disable Battery Optimization"
        android:textAllCaps="false" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerHorizontal="true"
        android:layout_marginBottom="16dp"
        android:text="Add widget to your home screen to view gold and silver rates"
        android:textColor="@android:color/white"
        android:textSize="14sp" />

</RelativeLayout>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\layout\rates_widget.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/widget_background"
    android:padding="8dp">

    <TextView
        android:id="@+id/widget_title"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:gravity="center"
        android:text="GC Jewellers"
        android:textColor="@android:color/white"
        android:textSize="18sp"
        android:textStyle="bold" />

    <TextView
        android:id="@+id/gold_rate"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/widget_title"
        android:layout_marginTop="8dp"
        android:gravity="center"
        android:text="Gold: Loading..."
        android:textColor="#FFD700"
        android:textSize="16sp" />

    <TextView
        android:id="@+id/silver_rate"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/gold_rate"
        android:layout_marginTop="8dp"
        android:gravity="center"
        android:text="Silver: Loading..."
        android:textColor="#C0C0C0"
        android:textSize="16sp" />

    <TextView
        android:id="@+id/last_updated"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/silver_rate"
        android:layout_marginTop="4dp"
        android:text="Last Updated: --:--:--"
        android:textColor="@android:color/white"
        android:textSize="12sp" />

    <ImageButton
        android:id="@+id/refresh_button"
        android:layout_width="30dp"
        android:layout_height="30dp"
        android:layout_alignParentEnd="true"
        android:layout_below="@id/silver_rate"
        android:background="@android:color/transparent"
        android:src="@drawable/ic_refresh" />

</RelativeLayout>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@drawable/ic_launcher_background" />
    <foreground android:drawable="@drawable/ic_launcher_foreground" />
    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
</adaptive-icon>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\values\colors.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
</resources>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\values\strings.xml
Content:
<resources>
    <string name="app_name">rateswidget</string>
</resources>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\values\styles.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Base application theme -->
    <style name="AppTheme" parent="android:Theme.Material">
        <item name="android:colorPrimary">#FFD700</item>
        <item name="android:colorPrimaryDark">#DAA520</item>
        <item name="android:colorAccent">#C0C0C0</item>
        <item name="android:windowBackground">@android:color/black</item>
    </style>
</resources>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\values\themes.xml
Content:
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Rateswidget" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme here. -->
        <!-- <item name="colorPrimary">@color/my_light_primary</item> -->
    </style>

    <style name="Theme.Rateswidget" parent="Base.Theme.Rateswidget" />
</resources>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\values-night\themes.xml
Content:
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.Rateswidget" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your dark theme here. -->
        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
    </style>
</resources>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\xml\backup_rules.xml
Content:
<?xml version="1.0" encoding="utf-8"?><!--
   Sample backup rules file; uncomment and customize as necessary.
   See https://developer.android.com/guide/topics/data/autobackup
   for details.
   Note: This file is ignored for devices older that API 31
   See https://developer.android.com/about/versions/12/backup-restore
-->
<full-backup-content>
    <!--
   <include domain="sharedpref" path="."/>
   <exclude domain="sharedpref" path="device.xml"/>
-->
</full-backup-content>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\xml\data_extraction_rules.xml
Content:
<?xml version="1.0" encoding="utf-8"?><!--
   Sample data extraction rules file; uncomment and customize as necessary.
   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
   for details.
-->
<data-extraction-rules>
    <cloud-backup>
        <!-- TODO: Use <include> and <exclude> to control what is backed up.
        <include .../>
        <exclude .../>
        -->
    </cloud-backup>
    <!--
    <device-transfer>
        <include .../>
        <exclude .../>
    </device-transfer>
    -->
</data-extraction-rules>

Path: C:\Users\divya\AndroidStudioProjects\rateswidget\app\src\main\res\xml\rates_widget_info.xml
Content:
<?xml version="1.0" encoding="utf-8"?>
<appwidget-provider xmlns:android="http://schemas.android.com/apk/res/android"
    android:initialKeyguardLayout="@layout/rates_widget"
    android:initialLayout="@layout/rates_widget"
    android:minWidth="250dp"
    android:minHeight="110dp"
    android:previewImage="@drawable/widget_preview"
    android:resizeMode="horizontal|vertical"
    android:updatePeriodMillis="10000"
    android:widgetCategory="home_screen">
</appwidget-provider>


